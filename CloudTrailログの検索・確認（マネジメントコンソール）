作業記録：CloudTrailログの検索・確認（マネジメントコンソール）
1. 作業目的
AWSアカウント内で発生した操作履歴を調査・監査するため、CloudTrailログをマネジメントコンソールから検索・確認する手順を実施。

2. 作業の背景
セキュリティインシデントの初期調査や構成変更の履歴確認が必要となる場面が増えているため。

CLIやAthenaによる検索も可能だが、今回はGUIでの操作手順を標準化目的で記録。

3. 操作手順（マネジメントコンソール）
手順	操作内容
1	AWSマネジメントコンソールにログインし、CloudTrailサービスを開く
2	左メニューより「イベント履歴（Event history）」を選択
3	フィルターを使用し、以下の条件を指定して検索
例：イベント名: ConsoleLogin、結果: 失敗 (SigninFailure)、期間: 過去7日間
4	該当するイベントの詳細をクリックし、ユーザー名・ソースIP・タイムスタンプ・リージョン等を確認
5	必要に応じてCSV形式でログをエクスポート可能（画面右上の「エクスポート」ボタン）

4. 検索のポイント・活用例
特定ユーザーの操作確認
→ フィルターで「ユーザー名」を指定して追跡可能

不正アクセスの兆候確認
→ イベント名を「ConsoleLogin」、結果を「失敗（SigninFailure）」で抽出

リソース作成・削除の操作履歴
→ イベント名に「Create」「Delete」などのキーワードを含めて検索

5. 作業結果・確認内容
対象期間内における不正なConsoleLogin試行はなし

対象ユーザーによるEC2関連操作（例：RunInstances, TerminateInstances）を確認

必要なイベント情報をCSVに出力し、関係者と共有予定

6. 注意点
ログがCloudTrailで記録されるまでに数分のラグがある点に注意

デフォルトでは過去90日間のイベントのみ表示されるため、長期保存を希望する場合はS3バケットへのログ配信設定が必要

GUIでの検索は柔軟性が低いため、複雑な検索はAthena連携が推奨される

補足：イベント履歴と証跡（Trail）の違い、および今回の対応範囲
1. CloudTrailの構成要素
項目	説明
イベント履歴（Event history）	CloudTrailにより自動で取得される過去90日間のマネジメントイベントを、AWSマネジメントコンソールから直接確認できる機能。追加設定不要。
証跡（Trail）	ユーザーが作成・設定することで、全リージョンの操作履歴やデータイベント（例：S3アクセス、Lambda実行など）も記録し、S3保存やAthena分析が可能になる仕組み。

2. 今回の対応範囲と判断理由
今回の作業要件：「CloudTrailログをマネジメントコンソールから確認すること」

そのため、証跡の作成やAthenaによる分析は対象外と判断

過去90日以内の操作ログであれば、イベント履歴から直接検索可能であるため、追加設定を行わずに目的を達成できると判断

🔸 よって、今回は CloudTrailの「イベント履歴」のみを使用し、「証跡（Trail）」の作成・設定は行っていない

3. 今後の補足運用方針（参考）
要件	使用機能	備考
最近の操作確認（90日以内）	イベント履歴	追加設定不要。即時確認可
長期保存・過去ログの蓄積	証跡（Trail）＋S3保存	必要に応じて有効化
高度な分析・検索（例：IP分析、特定API呼び出し）	Trail＋Athena活用	クエリによる柔軟な検索が可能

この内容は、資料や手順書の末尾に補足情報として追記するのが効果的です。
さらに必要であれば、以下のような図解も可能です：

csharp
コピーする
編集する
CloudTrailの構成図（簡易）

[CloudTrail]
   ├── イベント履歴（90日間、即時確認、設定不要）
   └── 証跡（Trail） ─→ S3保存 ─→ Athena / Glue / Lake Formation


補足：SigninFailure の確認方法と注意点
🔸 背景
CloudTrailの「イベント履歴」では、エラーコード（errorCode）を直接フィルター項目として指定することはできない。
そのため、SigninFailure などの失敗イベントを確認する際は、検索バーを使って部分一致検索し、該当ログの詳細を個別に確認する必要がある。

🔸 実際の操作手順
イベント履歴画面を開く

検索バーに SigninFailure を入力

検索結果に表示された各イベントを開き、以下を確認する：

eventName: ConsoleLogin

errorCode: SigninFailure

responseElements.ConsoleLogin: Failure

必要に応じてCSVで出力してExcelで整形・分析を行うと可視化が容易

✅ 監査・運用に活用できる代表的な errorCode 一覧
エラーコード	用途 / 意味	代表的なイベント名	備考
SigninFailure	サインイン失敗	ConsoleLogin	パスワード間違いなどのログイン失敗
AccessDenied	権限拒否	多くの操作で共通	IAM権限不足、SCPブロックなど
UnauthorizedOperation	許可されない操作	EC2操作など	より広範なアクセス違反。操作そのものが拒否される
ExpiredToken	一時クレデンシャルの期限切れ	AssumeRole 操作など	SSOやSTS利用時によく発生
ThrottlingException	API制限超過（レート制限）	各種API	呼び出し頻度が制限を超えた
InvalidClientTokenId	認証情報が無効	各種API	古いアクセスキー、設定ミスなどで発生
RequestLimitExceeded	リクエスト数の上限超過	各種API	同時実行制限などによる失敗
NoSuchEntity	IAMやS3などでリソースが存在しない	GetUser, GetRole, GetObject など	削除済みやタイプミスなど

🔸 errorCode は CloudTrail の JSON ログ内に格納されるフィールドであり、GUIでは検索バーで部分一致検索 → 詳細確認が必要
🔸 Athena や CloudWatch Logs Insights であれば errorCode = 'AccessDenied' などの完全一致検索が可能

🧠 実務での活用例
ログイン失敗のアカウント洗い出し
　→ ConsoleLogin + SigninFailure で検索し、対象ユーザー・IP・タイムスタンプを確認

不審操作の検出
　→ UnauthorizedOperation や AccessDenied によって許可されていない操作の試行を特定

SSO環境におけるトークン期限切れの確認
　→ ExpiredToken による API 実行失敗が頻発していないかを監視

📌 まとめ
内容	方法	備考
SigninFailure の確認	検索バーに SigninFailure 入力 → 各ログ詳細を開く	errorCode はフィルター不可、部分一致検索で対応
errorCode 一覧の活用	よく使うコードを把握しておくことで、GUI検索やAthena分析が効率化	AccessDenied, UnauthorizedOperation など


